<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TypeSupport</name>
    </assembly>
    <members>
        <member name="T:TypeSupport.ArrayAccess">
            <summary>
            Provide access methods for <see cref="T:System.Array"/>
            </summary>
        </member>
        <member name="M:TypeSupport.ArrayAccess.IndexOf``1(``0[],``0)">
            <summary>
            The zero-based index of the first occurrence of value within the entire <paramref name="source"/>, if found; otherwise, –1.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An instance of <see cref="T:System.Array"/>.</param>
            <param name="value">The object to locate in <paramref name="source"/>.</param>
            <returns>The zero-based index of the first occurrence of value within the entire <paramref name="source"/>, if found; otherwise, –1.</returns>
        </member>
        <member name="M:TypeSupport.ArrayAccess.LastIndexOf``1(``0[],``0)">
            <summary>
            The zero-based index of the last occurrence of value within the entire <paramref name="source"/>, if found; otherwise, –1.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An instance of <see cref="T:System.Array"/>.</param>
            <param name="value">The object to locate in <paramref name="source"/>.</param>
            <returns>The zero-based index of the last occurrence of value within the entire <paramref name="source"/>, if found; otherwise, –1.</returns>
        </member>
        <member name="M:TypeSupport.ArrayAccess.IsBlank``1(``0[])">
            <summary>
            Check if <paramref name="source"/> is null or has no elements.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An instance of <see cref="T:System.Array"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.ArrayAccess.IsPresent``1(``0[])">
            <summary>
            Check if <paramref name="source"/> is not null and has any element.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An instance of <see cref="T:System.Array"/>.</param>
            <returns></returns>
        </member>
        <member name="T:TypeSupport.CollectionAccess">
            <summary>
             Provides extension methods for <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:TypeSupport.CollectionAccess.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An instance of <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <param name="values">The collection whose elements should be added to the end of the <see cref="T:System.Collections.Generic.ICollection`1"/>. 
            The collection can be null. If null, it won't add anything.
            </param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.CollectionAccess.IsBlank``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Check if <paramref name="source"/> is null or has no elements.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An instance of <see cref="T:System.Collections.ICollection"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.CollectionAccess.IsPresent``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Check if <paramref name="source"/> is not null and has any element.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An instance of <see cref="T:System.Collections.ICollection"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.CollectionAccess.Shuffle``1(System.Collections.Generic.IList{``0})">
            <summary>
            Randomize elements order by using Fisher–Yates algorithm
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An instance of <see cref="T:System.Collections.IList"/>.</param>
            <returns></returns>
        </member>
        <member name="T:TypeSupport.DateTimeCalculations">
            <summary>
            Provides extension methods for <see cref="T:System.DateTime"/> for calcualtions.
            </summary>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.Tomorrow(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that adds one day to the value of this instance.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> that adds one day to the value of this instance.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.Yesterday(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that minus one day to the value of this instance.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> that minus one day to the value of this instance.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.NextYear(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that adds one year to the value of this instance.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> that adds one year to the value of this instance.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.PreviousYear(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that minus one year to the value of this instance.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> that minus one year to the value of this instance.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.NextMonth(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that adds one month to the value of this instance.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> that adds one month to the value of this instance.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.PreviousMonth(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that minus one month to the value of this instance.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> that minus one month to the value of this instance.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.BeginningOfDay(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> with the time value set to 12:00:00 midnight (00:00:00).
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.Midnight(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> with the time value set to 12:00:00 midnight (00:00:00).
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.EndOfDay(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> with the time value set to (23:59:59).
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> with the time value set to (23:59:59).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.BeginningOfMonth(System.DateTime)">
            <summary>
            Returns the first day of the current month with the time value set to 12:00:00 midnight (00:00:00).
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns the first day of the current month with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.EndOfMonth(System.DateTime)">
            <summary>
            Returns the last day of the current month with the time value set to (23:59:59).
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns the last day of the current month with the time value set to (23:59:59).</returns>        
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.BeginningOfYear(System.DateTime)">
            <summary>
            Returns the first day of the current year with the time value set to 12:00:00 midnight (00:00:00).
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns the first day of the current year with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.EndOfYear(System.DateTime)">
            <summary>
            Returns the last day of the current year with the time value set to (23:59:59).
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns the last day of the current year with the time value set to (23:59:59).</returns>   
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.BeginningOfWeek(System.DateTime)">
            <summary>
            Returns the first day of the current week with the time value set to 12:00:00 midnight (00:00:00).
            This method is culture-aware method which calculates based on <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns the first day of the current week with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.EndOfWeek(System.DateTime)">
            <summary>
            Returns the last day of the current week with the time value set to (23:59:59).
            This method is culture-aware method which calculates based on <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns the last day of the current week with the time value set to (23:59:59).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.NextWeek(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that adds seven days to the value of this instance with the time value set to 12:00:00 midnight (00:00:00).
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> that adds seven days to the value of this instance with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.NextWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            Returns the given <paramref name="day" /> of next week with the time value set to 12:00:00 midnight (00:00:00).
            This method is culture-aware method which calculates based on <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <param name="day">The <see cref="T:System.DayOfWeek" /> of next week.</param>
            <returns>Returns the given <paramref name="day" /> of next week with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.BeginningOfQuarter(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> representing the start of the current quarter (1st of January, April, July, October) with the time value set to 12:00:00 midnight (00:00:00).
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> representing the start of the current quarter (1st of January, April, July, October) with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.EndOfQuarter(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> representing the end of the current quarter (last day of March, June, September, December) with the time value set to (23:59:59).
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> representing the end of the current quarter (last day of March, June, September, December) with the time value set to (23:59:59).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.IsToday(System.DateTime)">
            <summary>
            Returns true if the instance <see cref="T:System.DateTime" /> is today regardless of time, otherwise false.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns true if the instance Date is today regardless of time.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.IsFuture(System.DateTime)">
            <summary>
            Returns true if the instance <see cref="T:System.DateTime" /> is greater than <see cref="P:System.DateTime.Now" />, otherwise false.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns true if the instance <see cref="T:System.DateTime" /> is greater than <see cref="P:System.DateTime.Now" />.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.IsPast(System.DateTime)">
            <summary>
            Returns true if the instance <see cref="T:System.DateTime" /> is less than <see cref="P:System.DateTime.Now" />, otherwise false.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <returns>Returns true if the instance <see cref="T:System.DateTime" /> is less than <see cref="P:System.DateTime.Now" />.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.Advance(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that adds the provided parameters (<paramref name="years" />, <paramref name="months" />, <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />) value/s.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <param name="years">The number of years to add.</param>
            <param name="months">The number of months to add.</param>
            <param name="days">The number of days to add.</param>
            <param name="hours">The number of hours to add.</param>
            <param name="minutes">The number of minutes to add.</param>
            <param name="seconds">The number of seconds to add.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> that adds the provided parameters (<paramref name="years" />, <paramref name="months" />, <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />) value/s.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.Ago(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that minus the provided parameters (<paramref name="years" />, <paramref name="months" />, <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />) value/s.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <param name="years">The number of years to reduce.</param>
            <param name="months">The number of months to reduce.</param>
            <param name="days">The number of days to reduce.</param>
            <param name="hours">The number of hours to reduce.</param>
            <param name="minutes">The number of minutes to reduce.</param>
            <param name="seconds">The number of seconds to reduce.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> that minus the provided parameters (<paramref name="years" />, <paramref name="months" />, <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />) value/s.</returns>        
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.Change(System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that change the provided parameters (<paramref name="years" />, <paramref name="months" />, <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />, <paramref name="milliseconds" />) value/s.
            </summary>
            <param name="source"><see cref="T:System.DateTime" /> instance.</param>
            <param name="years">The number of years to change.</param>
            <param name="months">The number of months to change.</param>
            <param name="days">The number of days to change.</param>
            <param name="hours">The number of hours to change.</param>
            <param name="minutes">The number of minutes to change.</param>
            <param name="seconds">The number of seconds to change.</param>
            <param name="milliseconds">The number of milliseconds to change.</param>
            <returns>Returns a new <see cref="T:System.DateTime" /> that change the provided parameters (<paramref name="years" />, <paramref name="months" />, <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />, <paramref name="milliseconds" />) value/s.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.IsBlank(System.Nullable{System.DateTime})">
            <summary>
            Check if <paramref name="source"/> is null or has no elements.
            </summary>
            <param name="source">An instance of <see cref="T:System.DateTime"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.IsPresent(System.Nullable{System.DateTime})">
            <summary>
            Check if <paramref name="source"/> is not null and has any element.
            </summary>
            <param name="source">An instance of <see cref="T:System.DateTime"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.IsBlank(System.DateTime)">
            <summary>
            Check if <paramref name="source"/> is null or has no elements.
            </summary>
            <param name="source">An instance of <see cref="T:System.DateTime"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.IsPresent(System.DateTime)">
            <summary>
            Check if <paramref name="source"/> is not null and has any element.
            </summary>
            <param name="source">An instance of <see cref="T:System.DateTime"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.IsInsideInterval(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Check if <see cref="T:System.DateTime" /> is inside closed interval
            </summary>
            <param name="source">An instance of <see cref="T:System.DateTime"/>.</param>
            <param name="left">Left bound of interval</param>
            <param name="right">Right bound of interval</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.IsInsideSegment(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Check if <see cref="T:System.DateTime" /> is inside open interval (segment)
            </summary>
            <param name="source">An instance of <see cref="T:System.DateTime"/>.</param>
            <param name="left">Left bound of interval</param>
            <param name="right">Right bound of interval</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.IsInsideInterval(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Check if <see cref="T:System.DateTime" /> is inside closed interval
            </summary>
            <param name="source">An instance of <see cref="T:System.DateTime"/>.</param>
            <param name="left">Left bound of interval</param>
            <param name="right">Right bound of interval</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.DateTimeCalculations.IsInsideSegment(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Check if <see cref="T:System.DateTime" /> is inside open interval (segment)
            </summary>
            <param name="source">An instance of <see cref="T:System.DateTime"/>.</param>
            <param name="left">Left bound of interval</param>
            <param name="right">Right bound of interval</param>
            <returns></returns>
        </member>
        <member name="T:TypeSupport.DateTimeOffsetCalculations">
            <summary>
            Provides extension methods for <see cref="T:System.DateTimeOffset"/> for calcualtions.
            </summary>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.Tomorrow(System.DateTimeOffset)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> that adds one day to the value of this instance.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> that adds one day to the value of this instance.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.Yesterday(System.DateTimeOffset)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> that minus one day to the value of this instance.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> that minus one day to the value of this instance.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.NextYear(System.DateTimeOffset)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> that adds one year to the value of this instance.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> that adds one year to the value of this instance.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.PreviousYear(System.DateTimeOffset)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> that minus one year to the value of this instance.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> that minus one year to the value of this instance.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.NextMonth(System.DateTimeOffset)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> that adds one month to the value of this instance.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> that adds one month to the value of this instance.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.PreviousMonth(System.DateTimeOffset)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> that minus one month to the value of this instance.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> that minus one month to the value of this instance.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.BeginningOfDay(System.DateTimeOffset)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> with the time value set to 12:00:00 midnight (00:00:00).
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.Midnight(System.DateTimeOffset)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> with the time value set to 12:00:00 midnight (00:00:00).
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.EndOfDay(System.DateTimeOffset)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> with the time value set to (23:59:59).
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> with the time value set to (23:59:59).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.BeginningOfMonth(System.DateTimeOffset)">
            <summary>
            Returns the first day of the current month with the time value set to 12:00:00 midnight (00:00:00).
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns the first day of the current month with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.EndOfMonth(System.DateTimeOffset)">
            <summary>
            Returns the last day of the current month with the time value set to (23:59:59).
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns the last day of the current month with the time value set to (23:59:59).</returns>        
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.BeginningOfYear(System.DateTimeOffset)">
            <summary>
            Returns the first day of the current year with the time value set to 12:00:00 midnight (00:00:00).
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns the first day of the current year with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.EndOfYear(System.DateTimeOffset)">
            <summary>
            Returns the last day of the current year with the time value set to (23:59:59).
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns the last day of the current year with the time value set to (23:59:59).</returns>   
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.BeginningOfWeek(System.DateTimeOffset)">
            <summary>
            Returns the first day of the current week with the time value set to 12:00:00 midnight (00:00:00).
            This method is culture-aware method which calculates based on <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns the first day of the current week with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.EndOfWeek(System.DateTimeOffset)">
            <summary>
            Returns the last day of the current week with the time value set to (23:59:59).
            This method is culture-aware method which calculates based on <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns the last day of the current week with the time value set to (23:59:59).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.NextWeek(System.DateTimeOffset)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> that adds seven days to the value of this instance with the time value set to 12:00:00 midnight (00:00:00).
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> that adds seven days to the value of this instance with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.NextWeek(System.DateTimeOffset,System.DayOfWeek)">
            <summary>
            Returns the given <paramref name="day" /> of next week with the time value set to 12:00:00 midnight (00:00:00).
            This method is culture-aware method which calculates based on <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <param name="day">The <see cref="T:System.DayOfWeek" /> of next week.</param>
            <returns>Returns the given <paramref name="day" /> of next week with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.BeginningOfQuarter(System.DateTimeOffset)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> representing the start of the current quarter (1st of January, April, July, October) with the time value set to 12:00:00 midnight (00:00:00).
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> representing the start of the current quarter (1st of January, April, July, October) with the time value set to 12:00:00 midnight (00:00:00).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.EndOfQuarter(System.DateTimeOffset)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> representing the end of the current quarter (last day of March, June, September, December) with the time value set to (23:59:59).
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> representing the end of the current quarter (last day of March, June, September, December) with the time value set to (23:59:59).</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.IsFuture(System.DateTimeOffset)">
            <summary>
            Returns true if the instance <see cref="T:System.DateTimeOffset" /> is greater than <see cref="P:System.DateTimeOffset.Now" />, otherwise false.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns true if the instance <see cref="T:System.DateTimeOffset" /> is greater than <see cref="P:System.DateTimeOffset.Now" />.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.IsPast(System.DateTimeOffset)">
            <summary>
            Returns true if the instance <see cref="T:System.DateTimeOffset" /> is less than <see cref="P:System.DateTimeOffset.Now" />, otherwise false.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <returns>Returns true if the instance <see cref="T:System.DateTimeOffset" /> is less than <see cref="P:System.DateTimeOffset.Now" />.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.Advance(System.DateTimeOffset,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> that adds the provided parameters (<paramref name="years" />, <paramref name="months" />, <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />) value/s.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <param name="years">The number of years to add.</param>
            <param name="months">The number of months to add.</param>
            <param name="days">The number of days to add.</param>
            <param name="hours">The number of hours to add.</param>
            <param name="minutes">The number of minutes to add.</param>
            <param name="seconds">The number of seconds to add.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> that adds the provided parameters (<paramref name="years" />, <paramref name="months" />, <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />) value/s.</returns>
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.Ago(System.DateTimeOffset,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> that minus the provided parameters (<paramref name="years" />, <paramref name="months" />, <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />) value/s.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <param name="years">The number of years to reduce.</param>
            <param name="months">The number of months to reduce.</param>
            <param name="days">The number of days to reduce.</param>
            <param name="hours">The number of hours to reduce.</param>
            <param name="minutes">The number of minutes to reduce.</param>
            <param name="seconds">The number of seconds to reduce.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> that minus the provided parameters (<paramref name="years" />, <paramref name="months" />, <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />) value/s.</returns>        
        </member>
        <member name="M:TypeSupport.DateTimeOffsetCalculations.Change(System.DateTimeOffset,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a new <see cref="T:System.DateTimeOffset" /> that change the provided parameters (<paramref name="years" />, <paramref name="months" />, <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />, <paramref name="milliseconds" />) value/s.
            </summary>
            <param name="source"><see cref="T:System.DateTimeOffset" /> instance.</param>
            <param name="years">The number of years to change.</param>
            <param name="months">The number of months to change.</param>
            <param name="days">The number of days to change.</param>
            <param name="hours">The number of hours to change.</param>
            <param name="minutes">The number of minutes to change.</param>
            <param name="seconds">The number of seconds to change.</param>
            <param name="milliseconds">The number of milliseconds to change.</param>
            <returns>Returns a new <see cref="T:System.DateTimeOffset" /> that change the provided parameters (<paramref name="years" />, <paramref name="months" />, <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />, <paramref name="milliseconds" />) value/s.</returns>
        </member>
        <member name="T:TypeSupport.EnumerableAccess">
            <summary>
            Provides extension methods for <see cref="T:System.Collections.Generic.IEnumerable`1"/> for from/to conversion.
            </summary>
        </member>
        <member name="M:TypeSupport.EnumerableAccess.From``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Returns the tail of the element sequence from position.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to return elements from.</param>
            <param name="index">The index no to start from.</param>
            <returns>Returns the tail of the element sequence from position.</returns>
        </member>
        <member name="M:TypeSupport.EnumerableAccess.To``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Returns the beginning of the array up to position.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to return elements from.</param>
            <param name="index">The index no to stop at.</param>
            <returns>Returns the beginning of the array up to position.</returns>
        </member>
        <member name="M:TypeSupport.EnumerableAccess.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether a sequence is empty.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to check for emptiness.</param>
            <returns>true if the source sequence is null or contains no elements; otherwise, false.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TypeSupport.EnumerableAccess.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" -->
        <member name="M:TypeSupport.EnumerableAccess.IndexOf(System.Collections.IEnumerable,System.Func{System.Object,System.Boolean})">
            <summary>
            Seaches for the specified object and returns the zero-based index of the first occurence within the entire <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to find index</param>
            <param name="predicate">Predicate containing logic to find index</param>
            <returns>Index of the matched element or -1 if nothing found</returns>
        </member>
        <member name="M:TypeSupport.EnumerableAccess.IsBlank``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Check if <paramref name="source"/> is null or has no elements.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An instance of <see cref="T:System.Collections.IEnumerable"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.EnumerableAccess.IsPresent``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Check if <paramref name="source"/> is not null and has any element.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An instance of <see cref="T:System.Collections.IEnumerable"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.EnumerableAccess.IsBlank(System.Collections.IEnumerable)">
            <summary>
            Check if <paramref name="source"/> is null or has no elements.
            </summary>
            <param name="source">An instance of <see cref="T:System.Collections.IEnumerable"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.EnumerableAccess.IsPresent(System.Collections.IEnumerable)">
            <summary>
            Check if <paramref name="source"/> is not null and has any element.
            </summary>
            <param name="source">An instance of <see cref="T:System.Collections.IEnumerable"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.GuidAccess.IsPresent(System.Nullable{System.Guid})">
            <summary>
            Check if <paramref name="source"/> is not null and has no default value.
            </summary>
            <param name="source">An instance of <see cref="!:Guid?"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.GuidAccess.IsBlank(System.Nullable{System.Guid})">
            <summary>
            Check if <paramref name="source"/> is null or has default value.
            </summary>
            <param name="source">An instance of <see cref="!:Guid?"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.GuidAccess.IsPresent(System.Guid)">
            <summary>
            Check if <paramref name="source"/> is not null and has no default value.
            </summary>
            <param name="source">An instance of <see cref="T:System.Guid"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.GuidAccess.IsBlank(System.Guid)">
            <summary>
            Check if <paramref name="source"/> is null or has default value.
            </summary>
            <param name="source">An instance of <see cref="T:System.Guid"/>.</param>
            <returns></returns>
        </member>
        <member name="T:TypeSupport.IntegerAccess">
            <summary>
            Provides extension methods for <see cref="T:System.Int32"/> for easy access.
            </summary>
        </member>
        <member name="M:TypeSupport.IntegerAccess.Times(System.Int32,System.Action)">
            <summary>
            Loops the current <see cref="T:System.Int32" /> times with the given <paramref name="action"/>.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <param name="action">A <see cref="T:System.Action" /> to loop.</param>
        </member>
        <member name="M:TypeSupport.IntegerAccess.Times(System.Int32,System.Action{System.Int32})">
            <summary>
            Loops the current <see cref="T:System.Int32" /> times with the given <paramref name="action"/>.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <param name="action">A <see cref="T:System.Action`1" /> to loop.</param>
        </member>
        <member name="M:TypeSupport.IntegerAccess.IsBlank(System.Nullable{System.Int32})">
            <summary>
            Check if <paramref name="source"/> is null or has no elements.
            </summary>
            <param name="source">An instance of <see cref="T:System.Int32"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.IntegerAccess.IsPresent(System.Nullable{System.Int32})">
            <summary>
            Check if <paramref name="source"/> is not null and has any element.
            </summary>
            <param name="source">An instance of <see cref="T:System.Int32"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.IntegerAccess.IsBlank(System.Int32)">
            <summary>
            Check if <paramref name="source"/> is null or has no elements.
            </summary>
            <param name="source">An instance of <see cref="T:System.Int32"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.IntegerAccess.IsPresent(System.Int32)">
            <summary>
            Check if <paramref name="source"/> is not null and has any element.
            </summary>
            <param name="source">An instance of <see cref="T:System.Int32"/>.</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.IntegerAccess.IsInsideInterval(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check if int is inside closed interval
            </summary>
            <param name="source">An instance of <see cref="T:System.Int32"/>.</param>
            <param name="left">Left bound of interval</param>
            <param name="right">Right bound of interval</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.IntegerAccess.IsInsideSegment(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check if int is inside open interval (segment)
            </summary>
            <param name="source">An instance of <see cref="T:System.Int32"/>.</param>
            <param name="left">Left bound of interval</param>
            <param name="right">Right bound of interval</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.IntegerAccess.IsInsideInterval(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Check if int is inside closed interval
            </summary>
            <param name="source">An instance of <see cref="T:System.Int32"/>.</param>
            <param name="left">Left bound of interval</param>
            <param name="right">Right bound of interval</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.IntegerAccess.IsInsideSegment(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Check if int is inside open interval (segment)
            </summary>
            <param name="source">An instance of <see cref="T:System.Int32"/>.</param>
            <param name="left">Left bound of interval</param>
            <param name="right">Right bound of interval</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.IntegerAccess.FuzzyEqual(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check if <paramref name="source"/> is near <paramref name="value"/> with <paramref name="epsilon"/> approximation
            </summary>
            <param name="source">Source value to check</param>
            <param name="value">Value to check</param>
            <param name="epsilon">Approximation</param>
            <example>
            10.FuzzyEqual(11, 2) === true
            10.FuzzyEqual(15, 2) === false
            </example>
        </member>
        <member name="T:TypeSupport.IntegerByte">
            <summary>
            Provides extension methods for <see cref="T:System.Int32"/> for byte/kilobyte/etc conversion.
            </summary>
        </member>
        <member name="M:TypeSupport.IntegerByte.Byte(System.Int32)">
            <summary>
            A byte.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>A byte.</returns>
        </member>
        <member name="M:TypeSupport.IntegerByte.Bytes(System.Int32)">
            <summary>
            The bytes in number.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>The bytes in number.</returns>
        </member>
        <member name="M:TypeSupport.IntegerByte.Kilobyte(System.Int32)">
            <summary>
            A kilobyte.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>A kilobyte.</returns>
        </member>
        <member name="M:TypeSupport.IntegerByte.Kilobytes(System.Int32)">
            <summary>
            The kilobytes in number.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>The kilobytes in number.</returns>
        </member>
        <member name="M:TypeSupport.IntegerByte.Megabyte(System.Int32)">
            <summary>
            A megabyte.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>A megabyte.</returns>
        </member>
        <member name="M:TypeSupport.IntegerByte.Megabytes(System.Int32)">
            <summary>
            The megabytes in number.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>The megabytes in number.</returns>
        </member>
        <member name="M:TypeSupport.IntegerByte.Gigabyte(System.Int32)">
            <summary>
            A gigabype.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>A gigabyte.</returns>
        </member>
        <member name="M:TypeSupport.IntegerByte.Gigabytes(System.Int32)">
            <summary>
            The gigabytes in number.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>The gigabytes in number.</returns>
        </member>
        <member name="M:TypeSupport.IntegerByte.Terabyte(System.Int32)">
            <summary>
            A terabyte.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>A terabyte.</returns>
        </member>
        <member name="M:TypeSupport.IntegerByte.Terabytes(System.Int32)">
            <summary>
            The terabytes in number.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>The terabytes in number.</returns>
        </member>
        <member name="T:TypeSupport.IntegerEvenOdd">
            <summary>
            Provides extension methods for <see cref="T:System.Int32"/> for even/odds conversion.
            </summary>
        </member>
        <member name="M:TypeSupport.IntegerEvenOdd.IsOdd(System.Int32)">
            <summary>
            Returns true if the number is odd, otherwise false.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>Returns true if the number is odd, otherwise false.</returns>
        </member>
        <member name="M:TypeSupport.IntegerEvenOdd.IsEven(System.Int32)">
            <summary>
            Returns true if the number is even, otherwise false.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>Returns true if the number is even, otherwise false.</returns>        
        </member>
        <member name="M:TypeSupport.IntegerEvenOdd.IsMultipleOf(System.Int32,System.Int32)">
            <summary>
            Returns true if the number is multiple of <paramref name="number"/>, otherwise false.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <param name="number">The multiplier.</param>
            <returns>Returns true if the number is multiple of <paramref name="number" />, otherwise false.</returns>        
        </member>
        <member name="T:TypeSupport.IntegerTime">
            <summary>
            Provides extension methods for <see cref="T:System.Int32"/> for <see cref="T:System.TimeSpan"/> conversion.
            </summary>
        </member>
        <member name="M:TypeSupport.IntegerTime.Second(System.Int32)">
            <summary>
            Returns a <see cref="T:System.TimeSpan"/> in second.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>Returns a <see cref="T:System.TimeSpan"/> in second.</returns>
        </member>
        <member name="M:TypeSupport.IntegerTime.Seconds(System.Int32)">
            <summary>
            Returns a <see cref="T:System.TimeSpan"/> in seconds.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>Returns a <see cref="T:System.TimeSpan"/> in seconds.</returns>
        </member>
        <member name="M:TypeSupport.IntegerTime.Minute(System.Int32)">
            <summary>
            Returns a <see cref="T:System.TimeSpan"/> in minute.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>Returns a <see cref="T:System.TimeSpan"/> in minute.</returns>
        </member>
        <member name="M:TypeSupport.IntegerTime.Minutes(System.Int32)">
            <summary>
            Returns a <see cref="T:System.TimeSpan"/> in minutes.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>Returns a <see cref="T:System.TimeSpan"/> in minutes.</returns>        
        </member>
        <member name="M:TypeSupport.IntegerTime.Hour(System.Int32)">
            <summary>
            Returns a <see cref="T:System.TimeSpan"/> in hour.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>Returns a <see cref="T:System.TimeSpan"/> in hour.</returns>        
        </member>
        <member name="M:TypeSupport.IntegerTime.Hours(System.Int32)">
            <summary>
            Returns a <see cref="T:System.TimeSpan"/> in hours.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>Returns a <see cref="T:System.TimeSpan"/> in hours.</returns>        
        </member>
        <member name="M:TypeSupport.IntegerTime.Day(System.Int32)">
            <summary>
            Returns a <see cref="T:System.TimeSpan"/> in day.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>Returns a <see cref="T:System.TimeSpan"/> in day.</returns>
        </member>
        <member name="M:TypeSupport.IntegerTime.Days(System.Int32)">
            <summary>
            Returns a <see cref="T:System.TimeSpan"/> in days.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>Returns a <see cref="T:System.TimeSpan"/> in days.</returns>
        </member>
        <member name="M:TypeSupport.IntegerTime.Week(System.Int32)">
            <summary>
            Returns a <see cref="T:System.TimeSpan"/> in week.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>Returns a <see cref="T:System.TimeSpan"/> in week.</returns>
        </member>
        <member name="M:TypeSupport.IntegerTime.Weeks(System.Int32)">
            <summary>
            Returns a <see cref="T:System.TimeSpan"/> in weeks.
            </summary>
            <param name="source">A <see cref="T:System.Int32"/> instance.</param>
            <returns>Returns a <see cref="T:System.TimeSpan"/> in weeks.</returns>
        </member>
        <member name="T:TypeSupport.StreamTaskParallelism">
            <summary>
            Provides Task Parallel Library usage to wrap Asynchronous Programming Model pattern.
            </summary>
        </member>
        <member name="M:TypeSupport.StreamTaskParallelism.ReadAsync(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> instance.</param>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>The created <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:TypeSupport.StreamTaskParallelism.WriteAsync(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="stream"></param>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in buffer from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>        
            <returns>The created <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="T:TypeSupport.StringAccess">
            <summary>
            Provide access methods for <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:TypeSupport.StringAccess.IsWhiteSpaceInternal(System.Char)">
            <summary>
            Analog of Char.IsWhitespace of <see cref="T:System.Char"/>
            </summary>
            <param name="ch">Some char value</param>
            <returns></returns>
        </member>
        <member name="M:TypeSupport.StringAccess.Squish(System.String)">
            <summary>
            Replaces all whitespace for a single space also remove any whitespace at beginning and end of string
            </summary>
            <param name="source">An instance of <see cref="T:System.String"/>.</param>
            <returns>New <see cref="T:System.String"/> without double whitespaces</returns>
        </member>
        <member name="M:TypeSupport.StringAccess.IsNullOrEmpty(System.String)">
            <summary>
            Check whether given <see cref="T:System.String"/> is null or empty.
            </summary>
            <param name="source">An instance of <see cref="T:System.String"/>.</param>
            <returns>true if <paramref name="source"/> is null or empty, otherwise false.</returns>
        </member>
        <member name="M:TypeSupport.StringAccess.IsBlank(System.String)">
            <summary>
            Check whether given <see cref="T:System.String"/> is null or empty or only whitespace.
            </summary>
            <param name="source">An instance of <see cref="T:System.String"/>.</param>
            <returns>true if <paramref name="source"/> is null or empty or only whitespace, otherwise false.</returns>
        </member>
        <member name="M:TypeSupport.StringAccess.IsPresent(System.String)">
            <summary>
            Check whether given <see cref="T:System.String"/> is not null or empty or only whitespace.
            </summary>
            <param name="source">An instance of <see cref="T:System.String"/>.</param>
            <returns>true if <paramref name="source"/> is null or empty or only whitespace, otherwise false.</returns>
        </member>
        <member name="M:TypeSupport.StringAccess.UrlEncode(System.String)">
            <summary>
            Encode string as url string.
            </summary>
            <param name="source"><see cref="T:System.String"/> instance to encode.</param>
            <returns>Encoded url string.</returns>
        </member>
        <member name="M:TypeSupport.StringAccess.UrlDecode(System.String)">
            <summary>
            Decode url string to original string.
            </summary>
            <param name="source"><see cref="T:System.String"/> instance to decode.</param>
            <returns>Original string of url string.</returns>
        </member>
        <member name="T:TypeSupport.StringFormatting">
            <summary>
            Provides extension methods for <see cref="T:System.String"/> for fomatting.
            </summary>
        </member>
        <member name="M:TypeSupport.StringFormatting.FormatWith(System.String,System.Object[])">
            <summary>
            Replaces one or more format items in a specified string with the string representation of a specified object.
            This method uses <see cref="M:System.String.Format(System.String,System.Object[])"/> method intenally.
            </summary>
            <param name="source">A <see cref="T:System.String"/> instance.</param>
            <param name="args">An object array that contains zero or more objects to format. </param>
            <returns>A copy of <paramref name="source"/> in which the format items have been replaced by the string representation of the corresponding objects in <paramref name="args"/>.</returns>
        </member>
        <member name="M:TypeSupport.StringFormatting.FormatWith(System.String,System.IFormatProvider,System.Object[])">
            <summary>
            Replaces one or more format items in a specified string with the string representation of a specified object.
            This method uses <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/> method intenally.
            </summary>
            <param name="source">A <see cref="T:System.String"/> instance.</param>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="args">An object array that contains zero or more objects to format. </param>
            <returns>A copy of <paramref name="source"/> in which the format items have been replaced by the string representation of the corresponding objects in <paramref name="args"/>.</returns>
        </member>
        <member name="M:TypeSupport.StringFormatting.Slice(System.String,System.Int32,System.Int32)">
            <summary>
            Get substring from index to index
            </summary>
            <param name="source"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="T:TypeSupport.StringToNumberConversion">
            <summary>
            Provides extension methods for <see cref="T:System.String"/> for conversion and checking to other types.
            </summary>
        </member>
        <member name="F:TypeSupport.StringToNumberConversion.DEFAULT_NUMBER_STYLES">
            <summary>
            Default format for numbers (has minimal format for mathimatic like numbers)
            </summary>
        </member>
        <member name="M:TypeSupport.StringToNumberConversion.IsNumber(System.String,System.Globalization.NumberStyles)">
            <summary>
            Return whether the provided <see cref="T:System.String"/> is number with provided <see cref="T:System.Globalization.NumberStyles"/>.
            </summary>
            <param name="source">A <see cref="T:System.String"/> instance.</param>
            <param name="style">A <see cref="T:System.Globalization.NumberStyles" /> to check against <paramref name="source"/>.</param>
            <returns>Returns true if the <see cref="T:System.String"/> can be convert to number with provided <see cref="T:System.Globalization.NumberStyles"/>, otherwise false.</returns>
        </member>
        <member name="M:TypeSupport.StringToNumberConversion.ToInt32(System.String,System.Globalization.NumberStyles)">
            <summary>
            Convert string <see cref="T:System.Int32"/> 
            </summary>
            <param name="source">A <see cref="T:System.String"/> instance.</param>
            <param name="style">A <see cref="T:System.Globalization.NumberStyles" /> to parse against <paramref name="source"/>.</param>
            <returns>Return converted <see cref="T:System.Int32"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when <paramref name="source"/> is null.</exception>
            <exception cref="T:System.FormatException">Throws when <paramref name="source"/> is not correct format.</exception>
            <exception cref="T:System.OverflowException">Throws when <paramref name="source"/> represents a number less than <see cref="F:System.Int32.MinValue"/> or greater than <see cref="F:System.Int32.MaxValue"/>.</exception>
            <exception cref="T:System.ArgumentException">Throws when <paramref name="style"/> is not valid <see cref="T:System.Globalization.NumberStyles"/></exception>
        </member>
        <member name="M:TypeSupport.StringToNumberConversion.AsInt32(System.String,System.Globalization.NumberStyles)">
            <summary>
            Return converted <see cref="T:System.Int32"/> if successfully parsed, otherwise null (Nothing in Visual Basic).
            </summary>
            <param name="source">A <see cref="T:System.String"/> instance.</param>
            <param name="style">A <see cref="T:System.Globalization.NumberStyles" /> to parse against <paramref name="source"/>.</param>
            <returns>An instance of <see cref="T:System.Int32"/> if successfully parsed, otherwise null (Nothing in Visual Basic).</returns>
        </member>
        <member name="M:TypeSupport.StringToNumberConversion.ToInt64(System.String,System.Globalization.NumberStyles)">
            <summary>
            Return converted <see cref="T:System.Int64"/>.
            </summary>
            <param name="source">A <see cref="T:System.String"/> instance.</param>
            <param name="style">A <see cref="T:System.Globalization.NumberStyles" /> to parse against <paramref name="source"/>.</param>
            <returns>Return converted <see cref="T:System.Int64"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when <paramref name="source"/> is null.</exception>
            <exception cref="T:System.FormatException">Throws when <paramref name="source"/> is not correct format.</exception>
            <exception cref="T:System.OverflowException">Throws when <paramref name="source"/> represents a number less than <see cref="F:System.Int64.MinValue"/> or greater than <see cref="F:System.Int64.MaxValue"/>.</exception>
            <exception cref="T:System.ArgumentException">Throws when <paramref name="style"/> is not valid <see cref="T:System.Globalization.NumberStyles"/></exception>
        </member>
        <member name="M:TypeSupport.StringToNumberConversion.AsInt64(System.String,System.Globalization.NumberStyles)">
            <summary>
            Return converted <see cref="T:System.Int64"/> if successfully parsed, otherwise null (Nothing in Visual Basic).
            </summary>
            <param name="source">A <see cref="T:System.String"/> instance.</param>
            <param name="style">A <see cref="T:System.Globalization.NumberStyles" /> to parse against <paramref name="source"/>.</param>
            <returns>An instance of <see cref="T:System.Int64"/> if successfully parsed, otherwise null (Nothing in Visual Basic).</returns>
        </member>
        <member name="M:TypeSupport.StringToNumberConversion.ToDouble(System.String,System.Globalization.NumberStyles)">
            <summary>
            Return converted <see cref="T:System.Double"/>.
            </summary>
            <param name="source">A <see cref="T:System.String"/> instance.</param>
            <param name="style">A <see cref="T:System.Globalization.NumberStyles" /> to parse against <paramref name="source"/>.</param>
            <returns>Return converted <see cref="T:System.Double"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when <paramref name="source"/> is null.</exception>
            <exception cref="T:System.FormatException">Throws when <paramref name="source"/> is not correct format.</exception>
            <exception cref="T:System.OverflowException">Throws when <paramref name="source"/> represents a number less than <see cref="F:System.Double.MinValue"/> or greater than <see cref="F:System.Double.MaxValue"/>.</exception>
            <exception cref="T:System.ArgumentException">Throws when <paramref name="style"/> is not valid <see cref="T:System.Globalization.NumberStyles"/></exception>
        </member>
        <member name="M:TypeSupport.StringToNumberConversion.AsDouble(System.String,System.Globalization.NumberStyles)">
            <summary>
            Return converted <see cref="T:System.Double"/> if successfully parsed, otherwise null (Nothing in Visual Basic).
            </summary>
            <param name="source">A <see cref="T:System.String"/> instance.</param>
            <param name="style">A <see cref="T:System.Globalization.NumberStyles" /> to parse against <paramref name="source"/>.</param>
            <returns>An instance of <see cref="T:System.Double"/> if successfully parsed, otherwise null (Nothing in Visual Basic).</returns>
        </member>
        <member name="M:TypeSupport.StringToNumberConversion.ToDecimal(System.String,System.Globalization.NumberStyles)">
            <summary>
            Return converted <see cref="T:System.Decimal"/>.
            </summary>
            <param name="source">A <see cref="T:System.String"/> instance.</param>
            <param name="style">A <see cref="T:System.Globalization.NumberStyles" /> to parse against <paramref name="source"/>.</param>
            <returns>Return converted <see cref="T:System.Decimal"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when <paramref name="source"/> is null.</exception>
            <exception cref="T:System.FormatException">Throws when <paramref name="source"/> is not correct format.</exception>
            <exception cref="T:System.OverflowException">Throws when <paramref name="source"/> represents a number less than <see cref="F:System.Decimal.MinValue"/> or greater than <see cref="F:System.Decimal.MaxValue"/>.</exception>
            <exception cref="T:System.ArgumentException">Throws when <paramref name="style"/> is not valid <see cref="T:System.Globalization.NumberStyles"/></exception>
        </member>
        <member name="M:TypeSupport.StringToNumberConversion.AsDecimal(System.String,System.Globalization.NumberStyles)">
            <summary>
            Return converted <see cref="T:System.Decimal"/> if successfully parsed, otherwise null (Nothing in Visual Basic).
            </summary>
            <param name="source">A <see cref="T:System.String"/> instance.</param>
            <param name="style">A <see cref="T:System.Globalization.NumberStyles" /> to parse against <paramref name="source"/>.</param>
            <returns>An instance of <see cref="T:System.Decimal"/> if successfully parsed, otherwise null (Nothing in Visual Basic).</returns>
        </member>
        <member name="T:TypeSupport.TimeSpanDateTimeOffset">
            <summary>
            Provides extension methods for <see cref="T:System.TimeSpan"/> for <see cref="T:System.DateTimeOffset"/> conversion.
            </summary>
        </member>
        <member name="M:TypeSupport.TimeSpanDateTimeOffset.Ago(System.TimeSpan)">
            <summary>
            Returns a <see cref="T:System.DateTimeOffset"/> which subtract current <see cref="T:System.TimeSpan"/> ago from now.
            </summary>
            <param name="source">A <see cref="T:System.TimeSpan"/> instance.</param>
            <returns>Returns a <see cref="T:System.DateTimeOffset"/> which subtract current <see cref="T:System.TimeSpan"/> ago from now.</returns>
        </member>
        <member name="M:TypeSupport.TimeSpanDateTimeOffset.FromNow(System.TimeSpan)">
            <summary>
            Returns a <see cref="T:System.DateTimeOffset"/> which add current <see cref="T:System.TimeSpan"/> since from now.
            </summary>
            <param name="source">A <see cref="T:System.TimeSpan"/> instance.</param>
            <returns>Returns a <see cref="T:System.DateTimeOffset"/> which add current <see cref="T:System.TimeSpan"/> since from now.</returns>
        </member>
        <member name="M:TypeSupport.TimeSpanDateTimeOffset.Until(System.TimeSpan,System.DateTimeOffset)">
            <summary>
            Returns a <see cref="T:System.DateTimeOffset"/> which subtract current <see cref="T:System.TimeSpan"/> ago from the <paramref name="time"/>.
            </summary>
            <param name="source">A <see cref="T:System.TimeSpan"/> instance.</param>
            <param name="time">A <see cref="T:System.DateTimeOffset"/> ago from.</param>
            <returns>Returns a <see cref="T:System.DateTimeOffset"/> which subtract current <see cref="T:System.TimeSpan"/> ago from the <paramref name="time"/>.</returns>
        </member>
        <member name="M:TypeSupport.TimeSpanDateTimeOffset.Since(System.TimeSpan,System.DateTimeOffset)">
            <summary>
            Returns a <see cref="T:System.DateTimeOffset"/> which add current <see cref="T:System.TimeSpan"/> since from the <paramref name="time"/>.
            </summary>
            <param name="source">A <see cref="T:System.TimeSpan"/> instance.</param>
            <param name="time">A <see cref="T:System.DateTimeOffset"/> since from.</param>
            <returns>Returns a <see cref="T:System.DateTimeOffset"/> which add current <see cref="T:System.TimeSpan"/> since from the <paramref name="time"/>.</returns>
        </member>
    </members>
</doc>
